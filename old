digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.keypair-1.aws_key_pair.keypair (expand)" [label = "module.keypair-1.aws_key_pair.keypair", shape = "box"]
		"[root] module.keypair-2.aws_key_pair.keypair (expand)" [label = "module.keypair-2.aws_key_pair.keypair", shape = "box"]
		"[root] module.network-vpc-1.aws_eip.eip-nat (expand)" [label = "module.network-vpc-1.aws_eip.eip-nat", shape = "box"]
		"[root] module.network-vpc-1.aws_internet_gateway.igw (expand)" [label = "module.network-vpc-1.aws_internet_gateway.igw", shape = "box"]
		"[root] module.network-vpc-1.aws_main_route_table_association.rt-main (expand)" [label = "module.network-vpc-1.aws_main_route_table_association.rt-main", shape = "box"]
		"[root] module.network-vpc-1.aws_nat_gateway.nat_gateway (expand)" [label = "module.network-vpc-1.aws_nat_gateway.nat_gateway", shape = "box"]
		"[root] module.network-vpc-1.aws_route.bastion-public-allipv4 (expand)" [label = "module.network-vpc-1.aws_route.bastion-public-allipv4", shape = "box"]
		"[root] module.network-vpc-1.aws_route.bastion-public-allowipv6 (expand)" [label = "module.network-vpc-1.aws_route.bastion-public-allowipv6", shape = "box"]
		"[root] module.network-vpc-1.aws_route.private-allipv4 (expand)" [label = "module.network-vpc-1.aws_route.private-allipv4", shape = "box"]
		"[root] module.network-vpc-1.aws_route.public-allipv4 (expand)" [label = "module.network-vpc-1.aws_route.public-allipv4", shape = "box"]
		"[root] module.network-vpc-1.aws_route.public-allowipv6 (expand)" [label = "module.network-vpc-1.aws_route.public-allowipv6", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)" [label = "module.network-vpc-1.aws_route_table.bastion-rt-public", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table.rt-private (expand)" [label = "module.network-vpc-1.aws_route_table.rt-private", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table.rt-public (expand)" [label = "module.network-vpc-1.aws_route_table.rt-public", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet (expand)" [label = "module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-private-subnet (expand)" [label = "module.network-vpc-1.aws_route_table_association.rt-to-private-subnet", shape = "box"]
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-public-subnet (expand)" [label = "module.network-vpc-1.aws_route_table_association.rt-to-public-subnet", shape = "box"]
		"[root] module.network-vpc-1.aws_security_group.allow-global (expand)" [label = "module.network-vpc-1.aws_security_group.allow-global", shape = "box"]
		"[root] module.network-vpc-1.aws_security_group.allow-local (expand)" [label = "module.network-vpc-1.aws_security_group.allow-local", shape = "box"]
		"[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)" [label = "module.network-vpc-1.aws_subnet.bastion-public-subnet", shape = "box"]
		"[root] module.network-vpc-1.aws_subnet.private-subnets (expand)" [label = "module.network-vpc-1.aws_subnet.private-subnets", shape = "box"]
		"[root] module.network-vpc-1.aws_subnet.public-subnets (expand)" [label = "module.network-vpc-1.aws_subnet.public-subnets", shape = "box"]
		"[root] module.network-vpc-1.aws_vpc.vpc (expand)" [label = "module.network-vpc-1.aws_vpc.vpc", shape = "box"]
		"[root] module.network-vpc-2.aws_eip.eip-nat (expand)" [label = "module.network-vpc-2.aws_eip.eip-nat", shape = "box"]
		"[root] module.network-vpc-2.aws_internet_gateway.igw (expand)" [label = "module.network-vpc-2.aws_internet_gateway.igw", shape = "box"]
		"[root] module.network-vpc-2.aws_main_route_table_association.rt-main (expand)" [label = "module.network-vpc-2.aws_main_route_table_association.rt-main", shape = "box"]
		"[root] module.network-vpc-2.aws_nat_gateway.nat_gateway (expand)" [label = "module.network-vpc-2.aws_nat_gateway.nat_gateway", shape = "box"]
		"[root] module.network-vpc-2.aws_route.bastion-public-allipv4 (expand)" [label = "module.network-vpc-2.aws_route.bastion-public-allipv4", shape = "box"]
		"[root] module.network-vpc-2.aws_route.bastion-public-allowipv6 (expand)" [label = "module.network-vpc-2.aws_route.bastion-public-allowipv6", shape = "box"]
		"[root] module.network-vpc-2.aws_route.private-allipv4 (expand)" [label = "module.network-vpc-2.aws_route.private-allipv4", shape = "box"]
		"[root] module.network-vpc-2.aws_route.public-allipv4 (expand)" [label = "module.network-vpc-2.aws_route.public-allipv4", shape = "box"]
		"[root] module.network-vpc-2.aws_route.public-allowipv6 (expand)" [label = "module.network-vpc-2.aws_route.public-allowipv6", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)" [label = "module.network-vpc-2.aws_route_table.bastion-rt-public", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table.rt-private (expand)" [label = "module.network-vpc-2.aws_route_table.rt-private", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table.rt-public (expand)" [label = "module.network-vpc-2.aws_route_table.rt-public", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet (expand)" [label = "module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-private-subnet (expand)" [label = "module.network-vpc-2.aws_route_table_association.rt-to-private-subnet", shape = "box"]
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-public-subnet (expand)" [label = "module.network-vpc-2.aws_route_table_association.rt-to-public-subnet", shape = "box"]
		"[root] module.network-vpc-2.aws_security_group.allow-global (expand)" [label = "module.network-vpc-2.aws_security_group.allow-global", shape = "box"]
		"[root] module.network-vpc-2.aws_security_group.allow-local (expand)" [label = "module.network-vpc-2.aws_security_group.allow-local", shape = "box"]
		"[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)" [label = "module.network-vpc-2.aws_subnet.bastion-public-subnet", shape = "box"]
		"[root] module.network-vpc-2.aws_subnet.private-subnets (expand)" [label = "module.network-vpc-2.aws_subnet.private-subnets", shape = "box"]
		"[root] module.network-vpc-2.aws_subnet.public-subnets (expand)" [label = "module.network-vpc-2.aws_subnet.public-subnets", shape = "box"]
		"[root] module.network-vpc-2.aws_vpc.vpc (expand)" [label = "module.network-vpc-2.aws_vpc.vpc", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_route.accepter-to-requester (expand)" [label = "module.peering-vpc1-vpc2.aws_route.accepter-to-requester", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_route.requester-to-accepter (expand)" [label = "module.peering-vpc1-vpc2.aws_route.requester-to-accepter", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" [label = "module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer (expand)" [label = "module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.accepter (expand)" [label = "module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.accepter", shape = "box"]
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.requester (expand)" [label = "module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.requester", shape = "box"]
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter" [label = "module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter", shape = "diamond"]
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester" [label = "module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester", shape = "diamond"]
		"[root] module.rs-client-1.aws_eip.eip (expand)" [label = "module.rs-client-1.aws_eip.eip", shape = "box"]
		"[root] module.rs-client-1.aws_instance.bastion (expand)" [label = "module.rs-client-1.aws_instance.bastion", shape = "box"]
		"[root] module.rs-client-1.aws_network_interface.nic (expand)" [label = "module.rs-client-1.aws_network_interface.nic", shape = "box"]
		"[root] module.rs-client-2.aws_eip.eip (expand)" [label = "module.rs-client-2.aws_eip.eip", shape = "box"]
		"[root] module.rs-client-2.aws_instance.bastion (expand)" [label = "module.rs-client-2.aws_instance.bastion", shape = "box"]
		"[root] module.rs-client-2.aws_network_interface.nic (expand)" [label = "module.rs-client-2.aws_network_interface.nic", shape = "box"]
		"[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)" [label = "module.rs-cluster-1-dns.aws_route53_record.A-records", shape = "box"]
		"[root] module.rs-cluster-1-dns.aws_route53_record.NS-record (expand)" [label = "module.rs-cluster-1-dns.aws_route53_record.NS-record", shape = "box"]
		"[root] module.rs-cluster-1-dns.data.aws_route53_zone.hosted_zone (expand)" [label = "module.rs-cluster-1-dns.data.aws_route53_zone.hosted_zone", shape = "box"]
		"[root] module.rs-cluster-1.aws_instance.node (expand)" [label = "module.rs-cluster-1.aws_instance.node", shape = "box"]
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" [label = "module.rs-cluster-1.aws_network_interface.cluster_nic", shape = "box"]
		"[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)" [label = "module.rs-cluster-2-dns.aws_route53_record.A-records", shape = "box"]
		"[root] module.rs-cluster-2-dns.aws_route53_record.NS-record (expand)" [label = "module.rs-cluster-2-dns.aws_route53_record.NS-record", shape = "box"]
		"[root] module.rs-cluster-2-dns.data.aws_route53_zone.hosted_zone (expand)" [label = "module.rs-cluster-2-dns.data.aws_route53_zone.hosted_zone", shape = "box"]
		"[root] module.rs-cluster-2.aws_instance.node (expand)" [label = "module.rs-cluster-2.aws_instance.node", shape = "box"]
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" [label = "module.rs-cluster-2.aws_network_interface.cluster_nic", shape = "box"]
		"[root] output.rs-client-1-public-IP" [label = "output.rs-client-1-public-IP", shape = "note"]
		"[root] output.rs-client-2-public-IP" [label = "output.rs-client-2-public-IP", shape = "note"]
		"[root] output.rs-cluster-1-nodes-dns" [label = "output.rs-cluster-1-nodes-dns", shape = "note"]
		"[root] output.rs-cluster-1-private-ips" [label = "output.rs-cluster-1-private-ips", shape = "note"]
		"[root] output.rs-cluster-1-public-ips" [label = "output.rs-cluster-1-public-ips", shape = "note"]
		"[root] output.rs-cluster-1-ui-dns" [label = "output.rs-cluster-1-ui-dns", shape = "note"]
		"[root] output.rs-cluster-2-nodes-dns" [label = "output.rs-cluster-2-nodes-dns", shape = "note"]
		"[root] output.rs-cluster-2-private-ips" [label = "output.rs-cluster-2-private-ips", shape = "note"]
		"[root] output.rs-cluster-2-public-ips" [label = "output.rs-cluster-2-public-ips", shape = "note"]
		"[root] output.rs-cluster-2-ui-dns" [label = "output.rs-cluster-2-ui-dns", shape = "note"]
		"[root] output.rs-grafana-endpoint-1" [label = "output.rs-grafana-endpoint-1", shape = "note"]
		"[root] output.rs-grafana-endpoint-2" [label = "output.rs-grafana-endpoint-2", shape = "note"]
		"[root] output.rs-prometheus-endpoint-1" [label = "output.rs-prometheus-endpoint-1", shape = "note"]
		"[root] output.rs-prometheus-endpoint-2" [label = "output.rs-prometheus-endpoint-2", shape = "note"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1" [label = "provider[\"registry.terraform.io/hashicorp/aws\"].provider1", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2" [label = "provider[\"registry.terraform.io/hashicorp/aws\"].provider2", shape = "diamond"]
		"[root] var.aws_access_key" [label = "var.aws_access_key", shape = "note"]
		"[root] var.aws_secret_key" [label = "var.aws_secret_key", shape = "note"]
		"[root] var.bastion_1_subnet" [label = "var.bastion_1_subnet", shape = "note"]
		"[root] var.bastion_2_subnet" [label = "var.bastion_2_subnet", shape = "note"]
		"[root] var.client_1_enabled" [label = "var.client_1_enabled", shape = "note"]
		"[root] var.client_2_enabled" [label = "var.client_2_enabled", shape = "note"]
		"[root] var.cluster_size" [label = "var.cluster_size", shape = "note"]
		"[root] var.deployment_name" [label = "var.deployment_name", shape = "note"]
		"[root] var.env1" [label = "var.env1", shape = "note"]
		"[root] var.env2" [label = "var.env2", shape = "note"]
		"[root] var.hosted_zone" [label = "var.hosted_zone", shape = "note"]
		"[root] var.machine_image_region_1" [label = "var.machine_image_region_1", shape = "note"]
		"[root] var.machine_image_region_2" [label = "var.machine_image_region_2", shape = "note"]
		"[root] var.machine_type" [label = "var.machine_type", shape = "note"]
		"[root] var.memtier_package" [label = "var.memtier_package", shape = "note"]
		"[root] var.private_conf" [label = "var.private_conf", shape = "note"]
		"[root] var.promethus_package" [label = "var.promethus_package", shape = "note"]
		"[root] var.rack_aware" [label = "var.rack_aware", shape = "note"]
		"[root] var.redis_stack_package" [label = "var.redis_stack_package", shape = "note"]
		"[root] var.region_1_name" [label = "var.region_1_name", shape = "note"]
		"[root] var.region_2_name" [label = "var.region_2_name", shape = "note"]
		"[root] var.rs_password" [label = "var.rs_password", shape = "note"]
		"[root] var.rs_release" [label = "var.rs_release", shape = "note"]
		"[root] var.rs_user" [label = "var.rs_user", shape = "note"]
		"[root] var.ssh_public_key" [label = "var.ssh_public_key", shape = "note"]
		"[root] var.ssh_user" [label = "var.ssh_user", shape = "note"]
		"[root] var.subnets_1" [label = "var.subnets_1", shape = "note"]
		"[root] var.subnets_2" [label = "var.subnets_2", shape = "note"]
		"[root] var.volume_size" [label = "var.volume_size", shape = "note"]
		"[root] var.volume_type" [label = "var.volume_type", shape = "note"]
		"[root] var.vpc_1_cidr" [label = "var.vpc_1_cidr", shape = "note"]
		"[root] var.vpc_2_cidr" [label = "var.vpc_2_cidr", shape = "note"]
		"[root] module.keypair-1 (close)" -> "[root] module.keypair-1.output.key-name (expand)"
		"[root] module.keypair-1.aws_key_pair.keypair (expand)" -> "[root] module.keypair-1.var.name (expand)"
		"[root] module.keypair-1.aws_key_pair.keypair (expand)" -> "[root] module.keypair-1.var.resource_tags (expand)"
		"[root] module.keypair-1.aws_key_pair.keypair (expand)" -> "[root] module.keypair-1.var.ssh_public_key (expand)"
		"[root] module.keypair-1.aws_key_pair.keypair (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1"
		"[root] module.keypair-1.output.key-name (expand)" -> "[root] module.keypair-1.aws_key_pair.keypair (expand)"
		"[root] module.keypair-1.var.name (expand)" -> "[root] module.keypair-1 (expand)"
		"[root] module.keypair-1.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.keypair-1.var.name (expand)" -> "[root] var.env1"
		"[root] module.keypair-1.var.resource_tags (expand)" -> "[root] module.keypair-1 (expand)"
		"[root] module.keypair-1.var.ssh_public_key (expand)" -> "[root] module.keypair-1 (expand)"
		"[root] module.keypair-1.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.keypair-2 (close)" -> "[root] module.keypair-2.output.key-name (expand)"
		"[root] module.keypair-2.aws_key_pair.keypair (expand)" -> "[root] module.keypair-2.var.name (expand)"
		"[root] module.keypair-2.aws_key_pair.keypair (expand)" -> "[root] module.keypair-2.var.resource_tags (expand)"
		"[root] module.keypair-2.aws_key_pair.keypair (expand)" -> "[root] module.keypair-2.var.ssh_public_key (expand)"
		"[root] module.keypair-2.aws_key_pair.keypair (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2"
		"[root] module.keypair-2.output.key-name (expand)" -> "[root] module.keypair-2.aws_key_pair.keypair (expand)"
		"[root] module.keypair-2.var.name (expand)" -> "[root] module.keypair-2 (expand)"
		"[root] module.keypair-2.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.keypair-2.var.name (expand)" -> "[root] var.env2"
		"[root] module.keypair-2.var.resource_tags (expand)" -> "[root] module.keypair-2 (expand)"
		"[root] module.keypair-2.var.ssh_public_key (expand)" -> "[root] module.keypair-2 (expand)"
		"[root] module.keypair-2.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_main_route_table_association.rt-main (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route.bastion-public-allipv4 (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route.bastion-public-allowipv6 (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route.private-allipv4 (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route.public-allipv4 (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route.public-allowipv6 (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.rt-to-private-subnet (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.rt-to-public-subnet (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.bastion-security-groups (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.bastion-subnet (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.raw_vpc (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.security-groups (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.subnets (expand)"
		"[root] module.network-vpc-1 (close)" -> "[root] module.network-vpc-1.output.vpc (expand)"
		"[root] module.network-vpc-1.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-1.var.name (expand)"
		"[root] module.network-vpc-1.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-1.var.resource_tags (expand)"
		"[root] module.network-vpc-1.aws_eip.eip-nat (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1"
		"[root] module.network-vpc-1.aws_internet_gateway.igw (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_main_route_table_association.rt-main (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-1.aws_main_route_table_association.rt-main (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-1.aws_nat_gateway.nat_gateway (expand)" -> "[root] module.network-vpc-1.aws_eip.eip-nat (expand)"
		"[root] module.network-vpc-1.aws_nat_gateway.nat_gateway (expand)" -> "[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-1.aws_route.bastion-public-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-1.aws_route.bastion-public-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-1.aws_route.bastion-public-allowipv6 (expand)" -> "[root] module.network-vpc-1.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-1.aws_route.bastion-public-allowipv6 (expand)" -> "[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-1.aws_route.private-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_nat_gateway.nat_gateway (expand)"
		"[root] module.network-vpc-1.aws_route.private-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-1.aws_route.public-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-1.aws_route.public-allipv4 (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-1.aws_route.public-allowipv6 (expand)" -> "[root] module.network-vpc-1.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-1.aws_route.public-allowipv6 (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-1.var.client_enabled (expand)"
		"[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_route_table.rt-private (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_route_table.rt-private (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_route_table.rt-public (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_route_table.rt-public (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet (expand)" -> "[root] module.network-vpc-1.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet (expand)" -> "[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-private-subnet (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-private-subnet (expand)" -> "[root] module.network-vpc-1.aws_subnet.private-subnets (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-public-subnet (expand)" -> "[root] module.network-vpc-1.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-1.aws_route_table_association.rt-to-public-subnet (expand)" -> "[root] module.network-vpc-1.aws_subnet.public-subnets (expand)"
		"[root] module.network-vpc-1.aws_security_group.allow-global (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_security_group.allow-local (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-1.var.bastion_subnet_cidr (expand)"
		"[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-1.var.client_enabled (expand)"
		"[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-1.var.subnets_cidrs (expand)"
		"[root] module.network-vpc-1.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-1.var.subnets_cidrs (expand)"
		"[root] module.network-vpc-1.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-1.var.name (expand)"
		"[root] module.network-vpc-1.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-1.var.resource_tags (expand)"
		"[root] module.network-vpc-1.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-1.var.vpc_cidr (expand)"
		"[root] module.network-vpc-1.aws_vpc.vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1"
		"[root] module.network-vpc-1.output.bastion-security-groups (expand)" -> "[root] module.network-vpc-1.aws_security_group.allow-global (expand)"
		"[root] module.network-vpc-1.output.bastion-security-groups (expand)" -> "[root] module.network-vpc-1.aws_security_group.allow-local (expand)"
		"[root] module.network-vpc-1.output.bastion-subnet (expand)" -> "[root] module.network-vpc-1.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-1.output.raw_vpc (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.output.security-groups (expand)" -> "[root] module.network-vpc-1.aws_security_group.allow-global (expand)"
		"[root] module.network-vpc-1.output.security-groups (expand)" -> "[root] module.network-vpc-1.aws_security_group.allow-local (expand)"
		"[root] module.network-vpc-1.output.security-groups (expand)" -> "[root] module.network-vpc-1.var.private_conf (expand)"
		"[root] module.network-vpc-1.output.subnets (expand)" -> "[root] module.network-vpc-1.aws_subnet.private-subnets (expand)"
		"[root] module.network-vpc-1.output.subnets (expand)" -> "[root] module.network-vpc-1.aws_subnet.public-subnets (expand)"
		"[root] module.network-vpc-1.output.vpc (expand)" -> "[root] module.network-vpc-1.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-1.var.bastion_subnet_cidr (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.bastion_subnet_cidr (expand)" -> "[root] var.bastion_1_subnet"
		"[root] module.network-vpc-1.var.client_enabled (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.client_enabled (expand)" -> "[root] var.client_1_enabled"
		"[root] module.network-vpc-1.var.name (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.network-vpc-1.var.name (expand)" -> "[root] var.env1"
		"[root] module.network-vpc-1.var.private_conf (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.private_conf (expand)" -> "[root] var.private_conf"
		"[root] module.network-vpc-1.var.resource_tags (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.subnets_cidrs (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.subnets_cidrs (expand)" -> "[root] var.subnets_1"
		"[root] module.network-vpc-1.var.vpc_cidr (expand)" -> "[root] module.network-vpc-1 (expand)"
		"[root] module.network-vpc-1.var.vpc_cidr (expand)" -> "[root] var.vpc_1_cidr"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_main_route_table_association.rt-main (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route.bastion-public-allipv4 (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route.bastion-public-allowipv6 (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route.private-allipv4 (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route.public-allipv4 (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route.public-allowipv6 (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.rt-to-private-subnet (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.rt-to-public-subnet (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.bastion-security-groups (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.bastion-subnet (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.raw_vpc (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.security-groups (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.subnets (expand)"
		"[root] module.network-vpc-2 (close)" -> "[root] module.network-vpc-2.output.vpc (expand)"
		"[root] module.network-vpc-2.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-2.var.name (expand)"
		"[root] module.network-vpc-2.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_eip.eip-nat (expand)" -> "[root] module.network-vpc-2.var.resource_tags (expand)"
		"[root] module.network-vpc-2.aws_eip.eip-nat (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2"
		"[root] module.network-vpc-2.aws_internet_gateway.igw (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_main_route_table_association.rt-main (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-2.aws_main_route_table_association.rt-main (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-2.aws_nat_gateway.nat_gateway (expand)" -> "[root] module.network-vpc-2.aws_eip.eip-nat (expand)"
		"[root] module.network-vpc-2.aws_nat_gateway.nat_gateway (expand)" -> "[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-2.aws_route.bastion-public-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-2.aws_route.bastion-public-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-2.aws_route.bastion-public-allowipv6 (expand)" -> "[root] module.network-vpc-2.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-2.aws_route.bastion-public-allowipv6 (expand)" -> "[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-2.aws_route.private-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_nat_gateway.nat_gateway (expand)"
		"[root] module.network-vpc-2.aws_route.private-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-2.aws_route.public-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-2.aws_route.public-allipv4 (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-2.aws_route.public-allowipv6 (expand)" -> "[root] module.network-vpc-2.aws_internet_gateway.igw (expand)"
		"[root] module.network-vpc-2.aws_route.public-allowipv6 (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-2.var.client_enabled (expand)"
		"[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_route_table.rt-private (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_route_table.rt-private (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_route_table.rt-public (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_route_table.rt-public (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet (expand)" -> "[root] module.network-vpc-2.aws_route_table.bastion-rt-public (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet (expand)" -> "[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-private-subnet (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-private (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-private-subnet (expand)" -> "[root] module.network-vpc-2.aws_subnet.private-subnets (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-public-subnet (expand)" -> "[root] module.network-vpc-2.aws_route_table.rt-public (expand)"
		"[root] module.network-vpc-2.aws_route_table_association.rt-to-public-subnet (expand)" -> "[root] module.network-vpc-2.aws_subnet.public-subnets (expand)"
		"[root] module.network-vpc-2.aws_security_group.allow-global (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_security_group.allow-local (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-2.var.bastion_subnet_cidr (expand)"
		"[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-2.var.client_enabled (expand)"
		"[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_subnet.private-subnets (expand)" -> "[root] module.network-vpc-2.var.subnets_cidrs (expand)"
		"[root] module.network-vpc-2.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.aws_subnet.public-subnets (expand)" -> "[root] module.network-vpc-2.var.subnets_cidrs (expand)"
		"[root] module.network-vpc-2.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-2.var.name (expand)"
		"[root] module.network-vpc-2.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-2.var.resource_tags (expand)"
		"[root] module.network-vpc-2.aws_vpc.vpc (expand)" -> "[root] module.network-vpc-2.var.vpc_cidr (expand)"
		"[root] module.network-vpc-2.aws_vpc.vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2"
		"[root] module.network-vpc-2.output.bastion-security-groups (expand)" -> "[root] module.network-vpc-2.aws_security_group.allow-global (expand)"
		"[root] module.network-vpc-2.output.bastion-security-groups (expand)" -> "[root] module.network-vpc-2.aws_security_group.allow-local (expand)"
		"[root] module.network-vpc-2.output.bastion-subnet (expand)" -> "[root] module.network-vpc-2.aws_subnet.bastion-public-subnet (expand)"
		"[root] module.network-vpc-2.output.raw_vpc (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.output.security-groups (expand)" -> "[root] module.network-vpc-2.aws_security_group.allow-global (expand)"
		"[root] module.network-vpc-2.output.security-groups (expand)" -> "[root] module.network-vpc-2.aws_security_group.allow-local (expand)"
		"[root] module.network-vpc-2.output.security-groups (expand)" -> "[root] module.network-vpc-2.var.private_conf (expand)"
		"[root] module.network-vpc-2.output.subnets (expand)" -> "[root] module.network-vpc-2.aws_subnet.private-subnets (expand)"
		"[root] module.network-vpc-2.output.subnets (expand)" -> "[root] module.network-vpc-2.aws_subnet.public-subnets (expand)"
		"[root] module.network-vpc-2.output.vpc (expand)" -> "[root] module.network-vpc-2.aws_vpc.vpc (expand)"
		"[root] module.network-vpc-2.var.bastion_subnet_cidr (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.bastion_subnet_cidr (expand)" -> "[root] var.bastion_2_subnet"
		"[root] module.network-vpc-2.var.client_enabled (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.client_enabled (expand)" -> "[root] var.client_2_enabled"
		"[root] module.network-vpc-2.var.name (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.network-vpc-2.var.name (expand)" -> "[root] var.env2"
		"[root] module.network-vpc-2.var.private_conf (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.private_conf (expand)" -> "[root] var.private_conf"
		"[root] module.network-vpc-2.var.resource_tags (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.subnets_cidrs (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.subnets_cidrs (expand)" -> "[root] var.subnets_2"
		"[root] module.network-vpc-2.var.vpc_cidr (expand)" -> "[root] module.network-vpc-2 (expand)"
		"[root] module.network-vpc-2.var.vpc_cidr (expand)" -> "[root] var.vpc_2_cidr"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.aws_route.accepter-to-requester (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.aws_route.requester-to-accepter (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.accepter (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.requester (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.output.peering (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.var.peer_subnets (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.var.requester_subnets (expand)"
		"[root] module.peering-vpc1-vpc2 (close)" -> "[root] module.peering-vpc1-vpc2.var.resource_tags (expand)"
		"[root] module.peering-vpc1-vpc2.aws_route.accepter-to-requester (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)"
		"[root] module.peering-vpc1-vpc2.aws_route.accepter-to-requester (expand)" -> "[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter"
		"[root] module.peering-vpc1-vpc2.aws_route.requester-to-accepter (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" -> "[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" -> "[root] module.peering-vpc1-vpc2.var.name (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" -> "[root] module.peering-vpc1-vpc2.var.peer_region (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" -> "[root] module.peering-vpc1-vpc2.var.peer_vpc (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)" -> "[root] module.peering-vpc1-vpc2.var.requester_vpc (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer (expand)" -> "[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.accepter (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer (expand)"
		"[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.requester (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_accepter.peer (expand)"
		"[root] module.peering-vpc1-vpc2.output.peering (expand)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection.peering (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter (close)" -> "[root] module.peering-vpc1-vpc2.aws_route.accepter-to-requester (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter (close)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.accepter (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter" -> "[root] module.peering-vpc1-vpc2.var.peer_region (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester (close)" -> "[root] module.peering-vpc1-vpc2.aws_route.requester-to-accepter (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester (close)" -> "[root] module.peering-vpc1-vpc2.aws_vpc_peering_connection_options.requester (expand)"
		"[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester" -> "[root] module.peering-vpc1-vpc2.var.requester_region (expand)"
		"[root] module.peering-vpc1-vpc2.var.name (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.peering-vpc1-vpc2.var.name (expand)" -> "[root] var.env1"
		"[root] module.peering-vpc1-vpc2.var.name (expand)" -> "[root] var.env2"
		"[root] module.peering-vpc1-vpc2.var.peer_region (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.peer_region (expand)" -> "[root] var.region_2_name"
		"[root] module.peering-vpc1-vpc2.var.peer_subnets (expand)" -> "[root] module.network-vpc-2.output.subnets (expand)"
		"[root] module.peering-vpc1-vpc2.var.peer_subnets (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.peer_vpc (expand)" -> "[root] module.network-vpc-2.output.raw_vpc (expand)"
		"[root] module.peering-vpc1-vpc2.var.peer_vpc (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.requester_region (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.requester_region (expand)" -> "[root] var.region_1_name"
		"[root] module.peering-vpc1-vpc2.var.requester_subnets (expand)" -> "[root] module.network-vpc-1.output.subnets (expand)"
		"[root] module.peering-vpc1-vpc2.var.requester_subnets (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.requester_vpc (expand)" -> "[root] module.network-vpc-1.output.raw_vpc (expand)"
		"[root] module.peering-vpc1-vpc2.var.requester_vpc (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.peering-vpc1-vpc2.var.resource_tags (expand)" -> "[root] module.peering-vpc1-vpc2 (expand)"
		"[root] module.rs-client-1 (close)" -> "[root] module.rs-client-1.output.grafana-endpoint (expand)"
		"[root] module.rs-client-1 (close)" -> "[root] module.rs-client-1.output.prometheus-endpoint (expand)"
		"[root] module.rs-client-1 (close)" -> "[root] module.rs-client-1.output.public-ip (expand)"
		"[root] module.rs-client-1 (close)" -> "[root] module.rs-client-1.var.ssh_public_key (expand)"
		"[root] module.rs-client-1.aws_eip.eip (expand)" -> "[root] module.rs-client-1.aws_instance.bastion (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.aws_network_interface.nic (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.availability_zone (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.boot_disk_size (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.boot_disk_type (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.cluster_dns (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.machine_image (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.machine_type (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.memtier_package (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.promethus_package (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.redis_stack_package (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.ssh_key_name (expand)"
		"[root] module.rs-client-1.aws_instance.bastion (expand)" -> "[root] module.rs-client-1.var.ssh_user (expand)"
		"[root] module.rs-client-1.aws_network_interface.nic (expand)" -> "[root] module.rs-client-1.var.name (expand)"
		"[root] module.rs-client-1.aws_network_interface.nic (expand)" -> "[root] module.rs-client-1.var.resource_tags (expand)"
		"[root] module.rs-client-1.aws_network_interface.nic (expand)" -> "[root] module.rs-client-1.var.security_groups (expand)"
		"[root] module.rs-client-1.aws_network_interface.nic (expand)" -> "[root] module.rs-client-1.var.subnet (expand)"
		"[root] module.rs-client-1.output.grafana-endpoint (expand)" -> "[root] module.rs-client-1.aws_eip.eip (expand)"
		"[root] module.rs-client-1.output.prometheus-endpoint (expand)" -> "[root] module.rs-client-1.aws_eip.eip (expand)"
		"[root] module.rs-client-1.output.public-ip (expand)" -> "[root] module.rs-client-1.aws_eip.eip (expand)"
		"[root] module.rs-client-1.var.availability_zone (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.availability_zone (expand)" -> "[root] var.bastion_1_subnet"
		"[root] module.rs-client-1.var.boot_disk_size (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.boot_disk_size (expand)" -> "[root] var.volume_size"
		"[root] module.rs-client-1.var.boot_disk_type (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.boot_disk_type (expand)" -> "[root] var.volume_type"
		"[root] module.rs-client-1.var.cluster_dns (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.cluster_dns (expand)" -> "[root] module.rs-cluster-1-dns.output.NS-record (expand)"
		"[root] module.rs-client-1.var.machine_image (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.machine_image (expand)" -> "[root] var.machine_image_region_1"
		"[root] module.rs-client-1.var.machine_type (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.machine_type (expand)" -> "[root] var.machine_type"
		"[root] module.rs-client-1.var.memtier_package (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.memtier_package (expand)" -> "[root] var.memtier_package"
		"[root] module.rs-client-1.var.name (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-client-1.var.name (expand)" -> "[root] var.env1"
		"[root] module.rs-client-1.var.promethus_package (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.promethus_package (expand)" -> "[root] var.promethus_package"
		"[root] module.rs-client-1.var.redis_stack_package (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.redis_stack_package (expand)" -> "[root] var.redis_stack_package"
		"[root] module.rs-client-1.var.resource_tags (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.security_groups (expand)" -> "[root] module.network-vpc-1.output.bastion-security-groups (expand)"
		"[root] module.rs-client-1.var.security_groups (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.ssh_key_name (expand)" -> "[root] module.keypair-1.output.key-name (expand)"
		"[root] module.rs-client-1.var.ssh_key_name (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.ssh_public_key (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.rs-client-1.var.ssh_user (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-1.var.ssh_user (expand)" -> "[root] var.ssh_user"
		"[root] module.rs-client-1.var.subnet (expand)" -> "[root] module.network-vpc-1.output.bastion-subnet (expand)"
		"[root] module.rs-client-1.var.subnet (expand)" -> "[root] module.rs-client-1 (expand)"
		"[root] module.rs-client-2 (close)" -> "[root] module.rs-client-2.output.grafana-endpoint (expand)"
		"[root] module.rs-client-2 (close)" -> "[root] module.rs-client-2.output.prometheus-endpoint (expand)"
		"[root] module.rs-client-2 (close)" -> "[root] module.rs-client-2.output.public-ip (expand)"
		"[root] module.rs-client-2 (close)" -> "[root] module.rs-client-2.var.ssh_public_key (expand)"
		"[root] module.rs-client-2.aws_eip.eip (expand)" -> "[root] module.rs-client-2.aws_instance.bastion (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.aws_network_interface.nic (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.availability_zone (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.boot_disk_size (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.boot_disk_type (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.cluster_dns (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.machine_image (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.machine_type (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.memtier_package (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.promethus_package (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.redis_stack_package (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.ssh_key_name (expand)"
		"[root] module.rs-client-2.aws_instance.bastion (expand)" -> "[root] module.rs-client-2.var.ssh_user (expand)"
		"[root] module.rs-client-2.aws_network_interface.nic (expand)" -> "[root] module.rs-client-2.var.name (expand)"
		"[root] module.rs-client-2.aws_network_interface.nic (expand)" -> "[root] module.rs-client-2.var.resource_tags (expand)"
		"[root] module.rs-client-2.aws_network_interface.nic (expand)" -> "[root] module.rs-client-2.var.security_groups (expand)"
		"[root] module.rs-client-2.aws_network_interface.nic (expand)" -> "[root] module.rs-client-2.var.subnet (expand)"
		"[root] module.rs-client-2.output.grafana-endpoint (expand)" -> "[root] module.rs-client-2.aws_eip.eip (expand)"
		"[root] module.rs-client-2.output.prometheus-endpoint (expand)" -> "[root] module.rs-client-2.aws_eip.eip (expand)"
		"[root] module.rs-client-2.output.public-ip (expand)" -> "[root] module.rs-client-2.aws_eip.eip (expand)"
		"[root] module.rs-client-2.var.availability_zone (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.availability_zone (expand)" -> "[root] var.bastion_2_subnet"
		"[root] module.rs-client-2.var.boot_disk_size (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.boot_disk_size (expand)" -> "[root] var.volume_size"
		"[root] module.rs-client-2.var.boot_disk_type (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.boot_disk_type (expand)" -> "[root] var.volume_type"
		"[root] module.rs-client-2.var.cluster_dns (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.cluster_dns (expand)" -> "[root] module.rs-cluster-2-dns.output.NS-record (expand)"
		"[root] module.rs-client-2.var.machine_image (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.machine_image (expand)" -> "[root] var.machine_image_region_2"
		"[root] module.rs-client-2.var.machine_type (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.machine_type (expand)" -> "[root] var.machine_type"
		"[root] module.rs-client-2.var.memtier_package (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.memtier_package (expand)" -> "[root] var.memtier_package"
		"[root] module.rs-client-2.var.name (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-client-2.var.name (expand)" -> "[root] var.env2"
		"[root] module.rs-client-2.var.promethus_package (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.promethus_package (expand)" -> "[root] var.promethus_package"
		"[root] module.rs-client-2.var.redis_stack_package (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.redis_stack_package (expand)" -> "[root] var.redis_stack_package"
		"[root] module.rs-client-2.var.resource_tags (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.security_groups (expand)" -> "[root] module.network-vpc-2.output.bastion-security-groups (expand)"
		"[root] module.rs-client-2.var.security_groups (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.ssh_key_name (expand)" -> "[root] module.keypair-2.output.key-name (expand)"
		"[root] module.rs-client-2.var.ssh_key_name (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.ssh_public_key (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.rs-client-2.var.ssh_user (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-client-2.var.ssh_user (expand)" -> "[root] var.ssh_user"
		"[root] module.rs-client-2.var.subnet (expand)" -> "[root] module.network-vpc-2.output.bastion-subnet (expand)"
		"[root] module.rs-client-2.var.subnet (expand)" -> "[root] module.rs-client-2 (expand)"
		"[root] module.rs-cluster-1 (close)" -> "[root] module.rs-cluster-1.output.re-nodes (expand)"
		"[root] module.rs-cluster-1 (close)" -> "[root] module.rs-cluster-1.output.re-private-ips (expand)"
		"[root] module.rs-cluster-1 (close)" -> "[root] module.rs-cluster-1.output.re-public-ips (expand)"
		"[root] module.rs-cluster-1-dns (close)" -> "[root] module.rs-cluster-1-dns.output.A-records (expand)"
		"[root] module.rs-cluster-1-dns (close)" -> "[root] module.rs-cluster-1-dns.output.NS-record (expand)"
		"[root] module.rs-cluster-1-dns (close)" -> "[root] module.rs-cluster-1-dns.var.resource_tags (expand)"
		"[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-1-dns.data.aws_route53_zone.hosted_zone (expand)"
		"[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-1-dns.var.ip_addresses (expand)"
		"[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-1-dns.var.subdomain (expand)"
		"[root] module.rs-cluster-1-dns.aws_route53_record.NS-record (expand)" -> "[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)"
		"[root] module.rs-cluster-1-dns.data.aws_route53_zone.hosted_zone (expand)" -> "[root] module.rs-cluster-1-dns.var.hosted_zone (expand)"
		"[root] module.rs-cluster-1-dns.data.aws_route53_zone.hosted_zone (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1"
		"[root] module.rs-cluster-1-dns.output.A-records (expand)" -> "[root] module.rs-cluster-1-dns.aws_route53_record.A-records (expand)"
		"[root] module.rs-cluster-1-dns.output.NS-record (expand)" -> "[root] module.rs-cluster-1-dns.aws_route53_record.NS-record (expand)"
		"[root] module.rs-cluster-1-dns.var.hosted_zone (expand)" -> "[root] module.rs-cluster-1-dns (expand)"
		"[root] module.rs-cluster-1-dns.var.hosted_zone (expand)" -> "[root] var.hosted_zone"
		"[root] module.rs-cluster-1-dns.var.ip_addresses (expand)" -> "[root] module.rs-cluster-1-dns (expand)"
		"[root] module.rs-cluster-1-dns.var.ip_addresses (expand)" -> "[root] module.rs-cluster-1.output.re-public-ips (expand)"
		"[root] module.rs-cluster-1-dns.var.resource_tags (expand)" -> "[root] module.rs-cluster-1-dns (expand)"
		"[root] module.rs-cluster-1-dns.var.subdomain (expand)" -> "[root] module.rs-cluster-1-dns (expand)"
		"[root] module.rs-cluster-1-dns.var.subdomain (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-1-dns.var.subdomain (expand)" -> "[root] var.env1"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.boot_disk_size (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.boot_disk_type (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.cluster_dns (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.machine_image (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.machine_type (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.private_conf (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.rack_aware (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.redis_distro (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.redis_password (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.redis_user (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.ssh_key_name (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.ssh_public_key (expand)"
		"[root] module.rs-cluster-1.aws_instance.node (expand)" -> "[root] module.rs-cluster-1.var.ssh_user (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.availability_zones (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.name (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.resource_tags (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.security_groups (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.subnets (expand)"
		"[root] module.rs-cluster-1.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-1.var.worker_count (expand)"
		"[root] module.rs-cluster-1.output.re-nodes (expand)" -> "[root] module.rs-cluster-1.aws_instance.node (expand)"
		"[root] module.rs-cluster-1.output.re-private-ips (expand)" -> "[root] module.rs-cluster-1.aws_instance.node (expand)"
		"[root] module.rs-cluster-1.output.re-public-ips (expand)" -> "[root] module.rs-cluster-1.aws_instance.node (expand)"
		"[root] module.rs-cluster-1.var.availability_zones (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.availability_zones (expand)" -> "[root] var.subnets_1"
		"[root] module.rs-cluster-1.var.boot_disk_size (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.boot_disk_size (expand)" -> "[root] var.volume_size"
		"[root] module.rs-cluster-1.var.boot_disk_type (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.boot_disk_type (expand)" -> "[root] var.volume_type"
		"[root] module.rs-cluster-1.var.cluster_dns (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.cluster_dns (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-1.var.cluster_dns (expand)" -> "[root] var.env1"
		"[root] module.rs-cluster-1.var.cluster_dns (expand)" -> "[root] var.hosted_zone"
		"[root] module.rs-cluster-1.var.machine_image (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.machine_image (expand)" -> "[root] var.machine_image_region_1"
		"[root] module.rs-cluster-1.var.machine_type (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.machine_type (expand)" -> "[root] var.machine_type"
		"[root] module.rs-cluster-1.var.name (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-1.var.name (expand)" -> "[root] var.env1"
		"[root] module.rs-cluster-1.var.private_conf (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.private_conf (expand)" -> "[root] var.private_conf"
		"[root] module.rs-cluster-1.var.rack_aware (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.rack_aware (expand)" -> "[root] var.rack_aware"
		"[root] module.rs-cluster-1.var.redis_distro (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.redis_distro (expand)" -> "[root] var.rs_release"
		"[root] module.rs-cluster-1.var.redis_password (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.redis_password (expand)" -> "[root] var.rs_password"
		"[root] module.rs-cluster-1.var.redis_user (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.redis_user (expand)" -> "[root] var.rs_user"
		"[root] module.rs-cluster-1.var.resource_tags (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.security_groups (expand)" -> "[root] module.network-vpc-1.output.security-groups (expand)"
		"[root] module.rs-cluster-1.var.security_groups (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.ssh_key_name (expand)" -> "[root] module.keypair-1.output.key-name (expand)"
		"[root] module.rs-cluster-1.var.ssh_key_name (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.ssh_public_key (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.rs-cluster-1.var.ssh_user (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.ssh_user (expand)" -> "[root] var.ssh_user"
		"[root] module.rs-cluster-1.var.subnets (expand)" -> "[root] module.network-vpc-1.output.subnets (expand)"
		"[root] module.rs-cluster-1.var.subnets (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.worker_count (expand)" -> "[root] module.rs-cluster-1 (expand)"
		"[root] module.rs-cluster-1.var.worker_count (expand)" -> "[root] var.cluster_size"
		"[root] module.rs-cluster-2 (close)" -> "[root] module.rs-cluster-2.output.re-nodes (expand)"
		"[root] module.rs-cluster-2 (close)" -> "[root] module.rs-cluster-2.output.re-private-ips (expand)"
		"[root] module.rs-cluster-2 (close)" -> "[root] module.rs-cluster-2.output.re-public-ips (expand)"
		"[root] module.rs-cluster-2-dns (close)" -> "[root] module.rs-cluster-2-dns.output.A-records (expand)"
		"[root] module.rs-cluster-2-dns (close)" -> "[root] module.rs-cluster-2-dns.output.NS-record (expand)"
		"[root] module.rs-cluster-2-dns (close)" -> "[root] module.rs-cluster-2-dns.var.resource_tags (expand)"
		"[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-2-dns.data.aws_route53_zone.hosted_zone (expand)"
		"[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-2-dns.var.ip_addresses (expand)"
		"[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)" -> "[root] module.rs-cluster-2-dns.var.subdomain (expand)"
		"[root] module.rs-cluster-2-dns.aws_route53_record.NS-record (expand)" -> "[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)"
		"[root] module.rs-cluster-2-dns.data.aws_route53_zone.hosted_zone (expand)" -> "[root] module.rs-cluster-2-dns.var.hosted_zone (expand)"
		"[root] module.rs-cluster-2-dns.data.aws_route53_zone.hosted_zone (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2"
		"[root] module.rs-cluster-2-dns.output.A-records (expand)" -> "[root] module.rs-cluster-2-dns.aws_route53_record.A-records (expand)"
		"[root] module.rs-cluster-2-dns.output.NS-record (expand)" -> "[root] module.rs-cluster-2-dns.aws_route53_record.NS-record (expand)"
		"[root] module.rs-cluster-2-dns.var.hosted_zone (expand)" -> "[root] module.rs-cluster-2-dns (expand)"
		"[root] module.rs-cluster-2-dns.var.hosted_zone (expand)" -> "[root] var.hosted_zone"
		"[root] module.rs-cluster-2-dns.var.ip_addresses (expand)" -> "[root] module.rs-cluster-2-dns (expand)"
		"[root] module.rs-cluster-2-dns.var.ip_addresses (expand)" -> "[root] module.rs-cluster-2.output.re-public-ips (expand)"
		"[root] module.rs-cluster-2-dns.var.resource_tags (expand)" -> "[root] module.rs-cluster-2-dns (expand)"
		"[root] module.rs-cluster-2-dns.var.subdomain (expand)" -> "[root] module.rs-cluster-2-dns (expand)"
		"[root] module.rs-cluster-2-dns.var.subdomain (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-2-dns.var.subdomain (expand)" -> "[root] var.env2"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.boot_disk_size (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.boot_disk_type (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.cluster_dns (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.machine_image (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.machine_type (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.private_conf (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.rack_aware (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.redis_distro (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.redis_password (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.redis_user (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.ssh_key_name (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.ssh_public_key (expand)"
		"[root] module.rs-cluster-2.aws_instance.node (expand)" -> "[root] module.rs-cluster-2.var.ssh_user (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.availability_zones (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.name (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.resource_tags (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.security_groups (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.subnets (expand)"
		"[root] module.rs-cluster-2.aws_network_interface.cluster_nic (expand)" -> "[root] module.rs-cluster-2.var.worker_count (expand)"
		"[root] module.rs-cluster-2.output.re-nodes (expand)" -> "[root] module.rs-cluster-2.aws_instance.node (expand)"
		"[root] module.rs-cluster-2.output.re-private-ips (expand)" -> "[root] module.rs-cluster-2.aws_instance.node (expand)"
		"[root] module.rs-cluster-2.output.re-public-ips (expand)" -> "[root] module.rs-cluster-2.aws_instance.node (expand)"
		"[root] module.rs-cluster-2.var.availability_zones (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.availability_zones (expand)" -> "[root] var.subnets_2"
		"[root] module.rs-cluster-2.var.boot_disk_size (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.boot_disk_size (expand)" -> "[root] var.volume_size"
		"[root] module.rs-cluster-2.var.boot_disk_type (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.boot_disk_type (expand)" -> "[root] var.volume_type"
		"[root] module.rs-cluster-2.var.cluster_dns (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.cluster_dns (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-2.var.cluster_dns (expand)" -> "[root] var.env2"
		"[root] module.rs-cluster-2.var.cluster_dns (expand)" -> "[root] var.hosted_zone"
		"[root] module.rs-cluster-2.var.machine_image (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.machine_image (expand)" -> "[root] var.machine_image_region_2"
		"[root] module.rs-cluster-2.var.machine_type (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.machine_type (expand)" -> "[root] var.machine_type"
		"[root] module.rs-cluster-2.var.name (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.name (expand)" -> "[root] var.deployment_name"
		"[root] module.rs-cluster-2.var.name (expand)" -> "[root] var.env2"
		"[root] module.rs-cluster-2.var.private_conf (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.private_conf (expand)" -> "[root] var.private_conf"
		"[root] module.rs-cluster-2.var.rack_aware (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.rack_aware (expand)" -> "[root] var.rack_aware"
		"[root] module.rs-cluster-2.var.redis_distro (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.redis_distro (expand)" -> "[root] var.rs_release"
		"[root] module.rs-cluster-2.var.redis_password (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.redis_password (expand)" -> "[root] var.rs_password"
		"[root] module.rs-cluster-2.var.redis_user (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.redis_user (expand)" -> "[root] var.rs_user"
		"[root] module.rs-cluster-2.var.resource_tags (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.security_groups (expand)" -> "[root] module.network-vpc-2.output.security-groups (expand)"
		"[root] module.rs-cluster-2.var.security_groups (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.ssh_key_name (expand)" -> "[root] module.keypair-2.output.key-name (expand)"
		"[root] module.rs-cluster-2.var.ssh_key_name (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.ssh_public_key (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.ssh_public_key (expand)" -> "[root] var.ssh_public_key"
		"[root] module.rs-cluster-2.var.ssh_user (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.ssh_user (expand)" -> "[root] var.ssh_user"
		"[root] module.rs-cluster-2.var.subnets (expand)" -> "[root] module.network-vpc-2.output.subnets (expand)"
		"[root] module.rs-cluster-2.var.subnets (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.worker_count (expand)" -> "[root] module.rs-cluster-2 (expand)"
		"[root] module.rs-cluster-2.var.worker_count (expand)" -> "[root] var.cluster_size"
		"[root] output.rs-client-1-public-IP" -> "[root] module.rs-client-1.output.public-ip (expand)"
		"[root] output.rs-client-2-public-IP" -> "[root] module.rs-client-2.output.public-ip (expand)"
		"[root] output.rs-cluster-1-nodes-dns" -> "[root] module.rs-cluster-1-dns.output.A-records (expand)"
		"[root] output.rs-cluster-1-private-ips" -> "[root] module.rs-cluster-1.output.re-private-ips (expand)"
		"[root] output.rs-cluster-1-public-ips" -> "[root] module.rs-cluster-1.output.re-public-ips (expand)"
		"[root] output.rs-cluster-1-ui-dns" -> "[root] module.rs-cluster-1-dns.output.A-records (expand)"
		"[root] output.rs-cluster-1-ui-dns" -> "[root] module.rs-cluster-1-dns.output.NS-record (expand)"
		"[root] output.rs-cluster-2-nodes-dns" -> "[root] module.rs-cluster-2-dns.output.A-records (expand)"
		"[root] output.rs-cluster-2-private-ips" -> "[root] module.rs-cluster-2.output.re-private-ips (expand)"
		"[root] output.rs-cluster-2-public-ips" -> "[root] module.rs-cluster-2.output.re-public-ips (expand)"
		"[root] output.rs-cluster-2-ui-dns" -> "[root] module.rs-cluster-2-dns.output.A-records (expand)"
		"[root] output.rs-cluster-2-ui-dns" -> "[root] module.rs-cluster-2-dns.output.NS-record (expand)"
		"[root] output.rs-grafana-endpoint-1" -> "[root] module.rs-client-1.output.grafana-endpoint (expand)"
		"[root] output.rs-grafana-endpoint-2" -> "[root] module.rs-client-2.output.grafana-endpoint (expand)"
		"[root] output.rs-prometheus-endpoint-1" -> "[root] module.rs-client-1.output.prometheus-endpoint (expand)"
		"[root] output.rs-prometheus-endpoint-2" -> "[root] module.rs-client-2.output.prometheus-endpoint (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_main_route_table_association.rt-main (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route.bastion-public-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route.bastion-public-allowipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route.private-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route.public-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route.public-allowipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.bastion-rt-to-public-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.rt-to-private-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.network-vpc-1.aws_route_table_association.rt-to-public-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)" -> "[root] module.rs-client-1.aws_eip.eip (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1" -> "[root] var.aws_access_key"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1" -> "[root] var.aws_secret_key"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1" -> "[root] var.region_1_name"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_main_route_table_association.rt-main (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route.bastion-public-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route.bastion-public-allowipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route.private-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route.public-allipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route.public-allowipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.bastion-rt-to-public-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.rt-to-private-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.network-vpc-2.aws_route_table_association.rt-to-public-subnet (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)" -> "[root] module.rs-client-2.aws_eip.eip (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2" -> "[root] var.aws_access_key"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2" -> "[root] var.aws_secret_key"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2" -> "[root] var.region_2_name"
		"[root] root" -> "[root] module.keypair-1 (close)"
		"[root] root" -> "[root] module.keypair-2 (close)"
		"[root] root" -> "[root] module.network-vpc-1 (close)"
		"[root] root" -> "[root] module.network-vpc-2 (close)"
		"[root] root" -> "[root] module.peering-vpc1-vpc2 (close)"
		"[root] root" -> "[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].accepter (close)"
		"[root] root" -> "[root] module.peering-vpc1-vpc2.provider[\"registry.terraform.io/hashicorp/aws\"].requester (close)"
		"[root] root" -> "[root] module.rs-client-1 (close)"
		"[root] root" -> "[root] module.rs-client-2 (close)"
		"[root] root" -> "[root] module.rs-cluster-1 (close)"
		"[root] root" -> "[root] module.rs-cluster-1-dns (close)"
		"[root] root" -> "[root] module.rs-cluster-2 (close)"
		"[root] root" -> "[root] module.rs-cluster-2-dns (close)"
		"[root] root" -> "[root] output.rs-client-1-public-IP"
		"[root] root" -> "[root] output.rs-client-2-public-IP"
		"[root] root" -> "[root] output.rs-cluster-1-nodes-dns"
		"[root] root" -> "[root] output.rs-cluster-1-private-ips"
		"[root] root" -> "[root] output.rs-cluster-1-public-ips"
		"[root] root" -> "[root] output.rs-cluster-1-ui-dns"
		"[root] root" -> "[root] output.rs-cluster-2-nodes-dns"
		"[root] root" -> "[root] output.rs-cluster-2-private-ips"
		"[root] root" -> "[root] output.rs-cluster-2-public-ips"
		"[root] root" -> "[root] output.rs-cluster-2-ui-dns"
		"[root] root" -> "[root] output.rs-grafana-endpoint-1"
		"[root] root" -> "[root] output.rs-grafana-endpoint-2"
		"[root] root" -> "[root] output.rs-prometheus-endpoint-1"
		"[root] root" -> "[root] output.rs-prometheus-endpoint-2"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider1 (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].provider2 (close)"
	}
}